import pygame
import random
from pygame.locals import*
pygame.init()
font=pygame. font.SysFont ("Times New Roman", 90) 
clock = pygame.time.Clock()
fps = 60
screen_width = 864
score = 0
screen_hight = 936
screen = pygame.display.set_mode((screen_width, screen_hight))
ground_scroll = 0
scrool_speed = 4
bg = pygame.image.load('assets/back 2.png')
ground_image = pygame.image.load('assets/back.png')
flappy1 = pygame.image.load('assets/flappy bird 1.png')
flappy2 = pygame.image.load('assets/flappy bird 2.png')
flappy3 = pygame.image.load('assets/flappy bird 3.png')
images = [flappy1,flappy2,flappy3]
run = True
pass_pipe = False
flying = False 
game_over = False
pipe_gap = 150
pipe_frequency = 1500 
Last_pipe = pygame.time.get_ticks() - pipe_frequency


class Bird(pygame.sprite.Sprite):
    def __init__(self,x,y):
        pygame.sprite.Sprite.__init__(self)
        self.images = images
        self.index = 0
        self.counter = 0
        self.image = self.images[self.index]
        self.rect = self.image.get_rect()
        self.rect.center = [x,y]
        self.vel = 0
        self.clicked = False
    def update(self):
        if flying == True:
            self.vel += 0.5
            if self.vel>8:
                self.vel = 8
            if self.rect.bottom < 768:
                self.rect.y += int(self.vel)
        if game_over == False:
            if pygame.mouse.get_pressed()[0] == 1 and self.clicked == False:
                self.clicked = True
                self.vel = -10
            if pygame.mouse.get_pressed()[0] == 0:
                self.clicked = False
            self.counter +=1 
            flap_cooldown = 5
            if self.counter > flap_cooldown:
                self.counter = 0
                self.index += 1
                if self.index >= len(self.images):
                    self.index = 0
                self.image = self.images[self.index]
                self.image = pygame.transform.rotate(self.images [self.index], self.vel * -2)
        else:
            self.image = pygame.transform.rotate(self.images[self.index], -90)
            
class Pipe(pygame.sprite.Sprite):
    def __init__(self, x, y, position):
        pygame. sprite.Sprite.__init__(self)
        self.image = pygame.image.load("assets/pipe.png")
        self.rect = self.image.get_rect()
        if position == 1:
            self.image = pygame. transform. flip(self.image, False, True)
            self.rect.bottomleft = [x, y - int(pipe_gap / 2)]
        if position == -1:
            self.rect.topleft = [x, y + int(pipe_gap / 2)]
            
    def update(self):
        self.rect.x -= scrool_speed 
        if self.rect. right < 0:
            self.kill()



pipe_group = pygame.sprite.Group()
flappy = Bird(100,int(screen_hight/2))
bird_group = pygame.sprite.Group()
bird_group.add(flappy)
while run:
    clock.tick(fps)
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
        # if it is quit the game
            pygame.quit()
        if event.type == pygame.MOUSEBUTTONDOWN and flying == False and game_over == False:
            flying = True 
            
    screen.blit(bg,(0,0))
    
    if flying == True and game_over == False:
        time_now = pygame.time.get_ticks()
        if time_now - Last_pipe > pipe_frequency:
            pipe_height = random.randint (-100, 100)
            bm_pipe = Pipe(screen_width, int(screen_hight/2) + pipe_height, -1)
            top_pipe = Pipe(screen_width, int(screen_hight/2) + pipe_height, 1)
            pipe_group.add(bm_pipe)
            pipe_group.add(top_pipe)
            Last_pipe = time_now
        pipe_group.update()


    bird_group.draw(screen)
    bird_group.update()
    pipe_group.draw(screen)
    
    if len(pipe_group) > 0:
        if bird_group.sprites()[0].rect.left > pipe_group.sprites()[0].rect.left\
            and bird_group.sprites()[0].rect.right < pipe_group.sprites()[0].rect.right\
            and pass_pipe == False:
            pass_pipe = True
        if pass_pipe == True:
            if bird_group.sprites()[0].rect.left > pipe_group.sprites()[0].rect.right:
                score += 1
                pass_pipe = False
    
    if pygame.sprite.groupcollide(bird_group,pipe_group,False,False):
        game_over = True 
        pygame.quit()
    screen.blit(ground_image,(ground_scroll, 768))
    text=font. render ("score "+str(score), True, (0,0,0))
    screen.blit(text,(305,60))
    ground_scroll -= scrool_speed
    if abs(ground_scroll) > 35:
        ground_scroll = 0
    pygame.display.update()
    
